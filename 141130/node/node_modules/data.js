var Buffer=require('buffer').Buffer;
var urlLib=require('url');
var querystring=require('querystring');
var boundary=require('boundary2');
var md5=require('common').md5;
var fs=require('fs');

exports.parse=function (req, fn)
{
	//把所有头，变成小写
	for(var i in req.headers)
	{
		req.headers[i.toLowerCase()]=req.headers[i];
	}
	
	//get、post、cookie、session
	var arr=[];
	req.on('data', function (data){
		arr.push(data);
	});
	req.on('end', function (){
		var buffer=Buffer.concat(arr);
		
		//文件 || 普通数据
		var post={};
		var files=[];
		
		if(req.headers['content-type']=='application/x-www-form-urlencoded' || !req.headers['content-type'])
		{
			//普通数据
			post=querystring.parse(buffer.toString('utf8'));
		}
		else
		{
			//上传文件
			var s=req.headers['content-type'].split('; ')[1];
			var bound=s.split('=')[1];
			
			boundary.parse(bound, buffer, files, post);
		}
		
		//GET
		var obj=urlLib.parse(req.url);
		var url=obj.pathname;
		var get=obj.query;
		
		//COOKIE
		//a=12; b=5; c=99
		var s=req.headers['cookie'];
		var cookie={};
		if(s)
		{
			cookie=querystring.parse(s.replace(/; /g, '&'));
		}
		
		//SESSION
		var session={};
		if(cookie['sessid'])
		{
			//读
			fs.readFile('_session/'+cookie['sessid'], function (err, data){
				if(err)
					console.log('session文件有问题');
				else
				{
					try
					{
						session=JSON.parse(data.toString('utf8'));
					}
					catch(e)
					{
						console.log('session损坏');
					}
					
					fn(url, get, post, files, cookie, session);
				}
			});
		}
		else
		{
			var sessid=md5(Math.random()+''+new Date().getTime());
			cookie['sessid']=sessid;
			
			fn(url, get, post, files, cookie, session);
		}
	});
}
