var fs=require('fs');
var common=require('common');

function createSessID()
{
	var str=new Date().getTime()+''+Math.random();
	
	str=str.replace('.', '');
	
	return common.md5(common.md5(str));
}

var timerAutoRemove=null;

module.exports={
	read:	function (cookie, fn)
	{
		if(!cookie['sessid'])
		{
			//生成、发给浏览器
			//1.生成——别重复、尽量复杂
			cookie['sessid']=createSessID();
		}
		
		//session——存在文件里
		var session={};
		//读文件
		fs.readFile('./141123/session/'+cookie['sessid'], function (err, data){
			if(!err)
			{
				try
				{
					session=JSON.parse(data);
				}
				catch(e)
				{
					console.log('session损坏');
					session={};
				}
			}
			
			fn(session);
		});
	},
	write:	function (cookie, session)
	{
		/*
		fs.writeFile('session/'+cookie['sessid'], JSON.stringify(session), function (err){
			if(err)
				console.log('写入session失败');
		});
		*/
		//坑——留着
		fs.writeFileSync('./141123/session/'+cookie['sessid'], JSON.stringify(session));
	},
	autoRemove:	function (interval, expires)
	{
		clearInterval(timerAutoRemove);
		timerAutoRemove=setInterval(function (){
			fs.readdir('./141123/session/', function (err, files){
				if(err)
					console.log('清除session错了');
				else
				{
					for(var i=0;i<files.length;i++)
					{
						(function (index){
							fs.stat('./141123/session/'+files[i], function (err, stat){
								if(err)
									console.log('清除session错了');
								else
								{
									var sec=Math.floor((new Date().getTime()-stat.mtime.getTime())/1000);
									
									if(sec>=expires)
									{
										fs.unlink('./141123/session/'+files[index], function (err){
											if(err)
												console.log('删除有错');
										});
									}
								}
							});
						})(i);
					}
				}
			});
		}, interval*1000);
	}
};
